version: 2.1
commands:
  rollback_network_tier:
    steps:
      - run:
          name: Rollback network Infra
          command: |
            aws cloudformation delete-stack --stack-name $NETWORK_STACK_NAME
  rollback_server_tier:
    steps:
      - run:
          name: Rollback server Infra
          command: |
            aws cloudformation delete-stack --stack-name $SERVER_STACK_NAME
workflows:
  deploy_workflow:
    jobs:
      #network, server then config management
      - deploy_network_tier:
          context: aws
      - deploy_server_tier:
          context: aws
          requires:
            - deploy_network_tier
      - deploy_ansible_control:
          context: aws
          requires:
            - deploy_server_tier
      - smoke_test:
          requires:
            - deploy_ansible_control
jobs:
  deploy_network_tier:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: "Network Infra Deploy"
          command:
            aws cloudformation deploy --stack-name $NETWORK_STACK_NAME --template-file $NETWORK_STACK_TEMPLATE --parameter-overrides file://$NETWORK_STACK_PARAMS
  deploy_server_tier:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: "Server Infra Deploy"
          command:
            aws cloudformation deploy --stack-name $SERVER_STACK_NAME --template-file $SERVER_STACK_TEMPLATE --parameter-overrides file://$SERVER_STACK_PARAMS --capabilities CAPABILITY_IAM
      - run
          command: rollback_network_tier
          when: on_fail
  deploy_ansible_control:
    docker:
      - image: cimg/python:3.9.0
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["9e:c4:ff:36:9e:ab:07:79:a5:24:20:fe:02:62:f8:2a"]
      - run:
          name: "Ansible control server install and playbook run"
          command: |
            cd /home/circleci/
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            sudo unzip awscliv2.zip
            sudo bash ./aws/install
            cd /home/circleci/project
            echo [ec2] >> inventory
            aws ec2 describe-instances --query 'Reservations[*].Instances[*].PublicIpAddress' --filters "Name=tag:Name,Values=AnsibleTesting" --output text >> inventory
            python -m pip install --user ansible
            ansible-playbook playbook.yml
      - persist_to_workspace:
          root: /home/circleci
          paths:
            - project
      - run
          command: rollback_server_tier
          when: on_fail
      - run
          command: rollback_network_tier
          when: on_fail
  smoke_test:
    docker:
      - image: amazon/aws-cli
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: "Simple smoke test"
          command: |
            cd /home/circleci/project/
            IP=$(head -2 inventory | tail -1)
            if [ "$(curl -s -o /dev/null -w "%{http_code}" "$IP")"  == "404" ] 
            then
              exit 0
            else
              exit 1
            fi
      - run
          command: rollback_server_tier
          when: on_fail
      - run
          command: rollback_network_tier
          when: on_fail
